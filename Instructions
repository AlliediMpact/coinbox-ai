
**Important: Do not hardcode API keys directly into your components.**

1.  **.env File:** The most secure way to store these keys is in a `.env` file at the root of your project. This file should **not** be committed to your Git repository.

    ```
    PAYSTACK_TEST_SECRET_KEY=sk_test_d3b31fb17c4586a72e280ce0602b19e0b9942601
    PAYSTACK_TEST_PUBLIC_KEY=pk_test_01b8360fcf741e6947b8ae55c51034e1d16cfac3
    ```

2.  **Accessing the Keys:** In your Next.js code, access these keys using `process.env`:

    ```javascript
    const paystackSecretKey = process.env.PAYSTACK_TEST_SECRET_KEY;
    const paystackPublicKey = process.env.PAYSTACK_TEST_PUBLIC_KEY;
    ```

3.  **Next.js Configuration (next.config.js or next.config.ts):** To make these environment variables available to the client-side code (if needed), you must explicitly expose them in your `next.config.js` or `next.config.ts` file:

    ```javascript
    /** @type {import('next').NextConfig} */
    const nextConfig = {
      env: {
        PAYSTACK_PUBLIC_KEY: process.env.PAYSTACK_TEST_PUBLIC_KEY,
      },
    };

    module.exports = nextConfig;
    ```

    **Important Notes:**

    *   Only expose the **public key** to the client-side. Never expose your secret key in client-side code, as this could lead to security vulnerabilities.
    *   For server-side operations (e.g., verifying transactions), you can safely use the secret key within your server-side functions.

    By following these steps, you'll ensure that your Paystack API keys are stored securely and accessed correctly within your Next.js application.
    